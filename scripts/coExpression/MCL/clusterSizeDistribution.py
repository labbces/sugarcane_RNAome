import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import ScalarFormatter
import collections

# Input: clusters granularity -> generated by clxdo

infile = "../fiberAndSugar/hoang/MCL/CNC/formated/out."

def cumulative_fraction_of_genes(data):
    # cumulative distribution fraction: 
    # https://www.geeksforgeeks.org/how-to-calculate-and-plot-a-cumulative-distribution-function-with-matplotlib-in-python/
    cdf = np.cumsum(data) / np.sum(data)
    return cdf

def plot_cdf(cluster_sizes, cdf, label, marker, color):
    plt.step(cluster_sizes, cdf, where='post', linestyle='-', linewidth=1, color=color)
    
    # unique indices to plot markers
    unique_indices = np.unique(cluster_sizes, return_index=True)[1]  
    unique_cluster_sizes = cluster_sizes[unique_indices]
    unique_cdf = cdf[unique_indices]
    plt.plot(unique_cluster_sizes, unique_cdf, label=label, marker=marker, linestyle='None', markersize=5, markerfacecolor='none', color=color)
                
#inflation_values = [1.3, 1.8, 2.3, 2.8, 3.3, 3.8, 4.3, 4.8, 5.3, 5.8]
#inflation_values = [1.8, 2.8, 3.8, 4.8, 5.8]
inflation_values = [1.3, 1.8, 2.8, 4.3, 5.8]

markers = ['o','^', '+', 'x', 'v', '<', '>', '1', 's', '*']
colors = ['black', 'darkgrey', '#777777', 'lightgrey', 'gainsboro']
#colors = ['black','#111111','#222222','#333333','#444444','#555555','#666666','#777777','#888888','#999999','lightgrey','gainsboro']
plt.figure(figsize=(10, 6))

for inflation, marker, color in zip(inflation_values, markers, colors):
    file_name = f'{infile}{inflation}.number'
    data = np.loadtxt(file_name)
    data.sort() # sort decreasing = FALSE
    cdf = cumulative_fraction_of_genes(data)
    
    # most frequent cluster size
    most_common_number = collections.Counter(data).most_common(1)[0][0]
    print(most_common_number)
    
    plot_cdf(data, cdf, label=f'Inflation {inflation}', marker=marker, color=color)
   
# change legend
##handles, labels = plt.gca().get_legend_handles_labels()
##inflation_0_index = labels.index('Inflation 0')
##labels[inflation_0_index] = 'connected components'
##plt.legend(handles, labels, frameon=False)
plt.legend(frameon=False)


plt.xscale('log')
plt.gca().xaxis.set_major_formatter(ScalarFormatter())
# manual - set dotted line at most commum cluster size distribution
plt.text(655, 0.16, '655', va='top', ha='center', color='red')

#plt.xticks([1, 2, 10, 1000, 1000000])#, ['1','2', '10', '1000', '10000'])

# draw lines to cluster size 2 and 3
xticks = [655] # 2
for xtick in xticks:
    plt.plot([xtick, xtick], [0, 0.12], color='red', linestyle='dotted')   # 0.12 = CDF point for cluster size
  
plt.ylim(bottom=0) # force Y axis  start on 0

plt.xlabel('Cluster size')
plt.ylabel('Cumulative fraction of genes')
plt.title('Cluster size distributions of Hoang2017 CNC network')
plt.grid(False)
plt.savefig('clusterSizeDistribution.png')

plt.show()