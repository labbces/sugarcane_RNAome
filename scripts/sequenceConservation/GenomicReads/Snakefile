#!/usr/bin/env python

#Usage:
#snakemake -p -k --resources load=6 -s Snakefile --rerun-incomplete --cluster "qsub -q all.q -V -cwd -pe smp {threads}" --jobs 6 --jobname "{rulename}.{jobid}"

configfile: "config.yaml"

import pandas as pd
from pandas.errors import EmptyDataError
import yaml
import os

# capturando o nome do arquivo "_samples.csv" na pasta de execucao
sample_file = [file for file in os.listdir() if file.endswith('_samples.csv')][0]

# extraindo o genotipo do nome do arquivo "_samples.csv"
GENOTYPE = os.path.splitext(sample_file)[0].replace('_samples', '')

# extraindo samples separadas por virgula
samples = pd.read_csv(GENOTYPE+'_samples.csv')

reference_transcriptome = "/Storage/data1/riano/Sugarcane/Pantranscriptome/Assemblies/CD-HIT_48_genotypes_transcriptome_salmonInx/"

ffq = config["software"]["ffq"]
bbduk = config["software"]["bbduk"]
salmon = config["software"]["salmon"]
jq = config["software"]["jq"]

rule all:
	input:
		expand("datasets_{genotype}/2_trimmed_reads/{sample}_1.stats.txt", genotype=GENOTYPE, sample=samples),
		expand("datasets_{genotype}/2_trimmed_reads/{sample}_2.stats.txt", genotype=GENOTYPE, sample=samples)

rule download_fastq:
	"""
	Baixa os arquivos brutos (fastq.gz) das leituras 1 e 2 das amostras do genotipo {params.genotype}.
	"""
	priority: 1
	output:
		R1 = "datasets_{genotype}/1_raw_reads_in_fastq_format/{sample}_1.fastq.gz",
		R2 = "datasets_{genotype}/1_raw_reads_in_fastq_format/{sample}_2.fastq.gz"
	threads: 1
	resources:
		load=6
	params:
		genotype="{genotype}",
		server="figsrv"
	log:
		"datasets_{genotype}/logs/download_fastq/{sample}.log"
	name: "download_fastq"
	shell:
		"""
		cd datasets_{params.genotype}/1_raw_reads_in_fastq_format && \
		{ffq} --ftp {wildcards.sample} | grep -Eo '\"url\": \"[^\"]*\"' | grep -o '\"[^\"]*\"$' | xargs wget && \
		cd -
		"""

rule bbduk:
	"""
	Remove os adaptadores de sequenciamento com illumina (adapters.fa) dos arquivos brutos (fastq.gz);
	Remove sequencias de RNA ribossomal (rRNA) dos arquivos brutos (fastq.gz);
	Filtra sequencias por minlength=75 e qualidade < Q20.
	"""
	priority: 1
	input:
		R1 = "datasets_{genotype}/1_raw_reads_in_fastq_format/{sample}_1.fastq.gz",
		R2 = "datasets_{genotype}/1_raw_reads_in_fastq_format/{sample}_2.fastq.gz"
	output:
		R1 = "datasets_{genotype}/2_trimmed_reads/{sample}.trimmed.R1.fastq.gz",
		R2 = "datasets_{genotype}/2_trimmed_reads/{sample}.trimmed.R2.fastq.gz",
		refstats = "datasets_{genotype}/2_trimmed_reads/{sample}.trimmed.refstats",
		stats = "datasets_{genotype}/2_trimmed_reads/{sample}.trimmed.stats"
	log:
		"datasets_{genotype}/logs/bbduk/{sample}.log"
	threads: 4
	resources:
		load=3
	params:
		server="figsrv"
	name: "bbduk"
	shell:
		"{bbduk} -Xmx40g threads={threads} in1={input.R1} in2={input.R2} "
		"refstats={output.refstats} stats={output.stats} "
		"out1={output.R1} out2={output.R2} "
		"rref=/Storage/progs/Trimmomatic-0.38/adapters/NexteraPE-PE.fa,"
		"/Storage/progs/Trimmomatic-0.38/adapters/TruSeq2-PE.fa,"
		"/Storage/progs/Trimmomatic-0.38/adapters/TruSeq2-SE.fa,"
		"/Storage/progs/Trimmomatic-0.38/adapters/TruSeq3-PE-2.fa,"
		"/Storage/progs/Trimmomatic-0.38/adapters/TruSeq3-PE.fa,"
		"/Storage/progs/Trimmomatic-0.38/adapters/TruSeq3-SE.fa "
		"minlength=60 qtrim=w trimq=20 showspeed=t k=27 rcomp=t maskmiddle=t mlf=0.6 qin=33 overwrite=true > {log} 2>&1"

rule count_raw_sequences:
	"""
	Conta o numero de sequencias nos arquivos brutos (fastq.gz) das leituras 1 e 2;
	Remove os arquivos brutos (fastq.gz) das leituras 1 e 2.
	"""
	priority: 1
	input:
		R1 = "datasets_{genotype}/1_raw_reads_in_fastq_format/{sample}_1.fastq.gz",
		R2 = "datasets_{genotype}/1_raw_reads_in_fastq_format/{sample}_2.fastq.gz",
		R1_trimmed = "datasets_{genotype}/2_trimmed_reads/{sample}.trimmed.R1.fastq.gz",
		R2_trimmed = "datasets_{genotype}/2_trimmed_reads/{sample}.trimmed.R2.fastq.gz"
	output:
		R1_rawstats = "datasets_{genotype}/1_raw_reads_in_fastq_format/{sample}_1.stats.txt",
		R2_rawstats = "datasets_{genotype}/1_raw_reads_in_fastq_format/{sample}_2.stats.txt"
	threads: 1
	resources:
		load = 1
	params:
		genotype="{genotype}",
		server="figsrv"
	log:
		"datasets_{genotype}/logs/count_raw_sequences/{sample}.log"
	name: "count_raw_sequences"
	shell:
		"""
		zcat {input.R1} | grep -c -E "@(SRR|ERR)" > {output.R1_rawstats} 2>> {log}
		echo "sequences: $(cat {output.R1_rawstats})" > {output.R1_rawstats} 2>> {log}
		rm {input.R1} 2>> {log} 
		
		zcat {input.R2} | grep -c -E "@(SRR|ERR)" > {output.R2_rawstats} 2>> {log}
		echo "sequences: $(cat {output.R2_rawstats})" > {output.R2_rawstats} 2>> {log}
		rm {input.R2} 2>> {log}
		"""

rule count_trimmed_sequences:
	"""
	Conta o numero de sequencias nos arquivos trimmados (fastq.gz) das leituras 1 e 2 apos o controle de qualidade com bbduk.
	Remove os arquivos trimmados (fastq.gz) das leituras 1 e 2 apos a quantificacao.
	"""
	priority: 1
	input:
		R1 = "datasets_{genotype}/2_trimmed_reads/{sample}.trimmed.R1.fastq.gz",
		R2 = "datasets_{genotype}/2_trimmed_reads/{sample}.trimmed.R2.fastq.gz",
		R1_rawstats = "datasets_{genotype}/1_raw_reads_in_fastq_format/{sample}_1.stats.txt",
		R2_rawstats = "datasets_{genotype}/1_raw_reads_in_fastq_format/{sample}_2.stats.txt"
	output:
		R1_trimmedstats = "datasets_{genotype}/2_trimmed_reads/{sample}_1.stats.txt",
		R2_trimmedstats = "datasets_{genotype}/2_trimmed_reads/{sample}_2.stats.txt"
	threads: 1
	resources:
		load = 1
	params:
		genotype="{genotype}",
		server="figsrv"
	log:
		"datasets_{genotype}/logs/count_trimmed_sequences/{sample}.log"
	name: "count_trimmed_sequences"
	shell:
		"""
		zcat {input.R1} | grep -c -E "@(SRR|ERR)" > {output.R1_trimmedstats} 2>> {log}
		echo "sequences: $(cat {output.R1_trimmedstats})" > {output.R1_trimmedstats} 2>> {log}

		zcat {input.R2} | grep -c -E "@(SRR|ERR)" > {output.R2_trimmedstats} 2>> {log}
		echo "sequences: $(cat {output.R2_trimmedstats})" > {output.R2_trimmedstats} 2>> {log}
		"""


