#!/usr/bin/env python

import pandas as pd
import os
import argparse
from plotnine import ggplot, aes, geom_jitter, geom_smooth, theme_bw, scale_y_log10, labs, save_as_pdf_pages, theme

# creating arguments
parser = argparse.ArgumentParser(prog = "justPlotPanRNAome", description="plot panRNAome from output generated by extractPanTranscriptomeGroups.py", add_help=True)
parser.add_argument("-i", dest="output_file", metavar="output from extractPanTranscriptomeGroups.py", help="tsv file with panRNAome classes", required=True)

# getting arguments
args = parser.parse_args()
output_file = args.output_file
outfigure_Groups_png="Pan-Transcriptome_Trajectory_Groups_" + os.path.basename(output_file) + ".png"
outfigure_Genes_png="Pan-Transcriptome_Trajectory_Genes_" + os.path.basename(output_file) + ".png"

# generating plots
data = pd.read_csv(output_file, delimiter="\t")
title_text_groups="Pan-Transcriptome Trajectory " + "0.9" + " -- Groups"
title_text_genes ="Pan-Transcriptome Trajectory " + "0.9" + " -- Genes"

fig1=ggplot(data) + aes(x="NumberGenotypes", y="NumberGroups", colour="Classification") + theme_bw() + geom_jitter() + geom_smooth(method="loess") + scale_y_log10() + labs(title=title_text_groups, x="Number of Genotypes", y="Number of Groups") + theme(figure_size=(20, 13))
fig1.save(outfigure_Groups_png, dpi=600, height=13, width=20, units = 'in')

fig2=ggplot(data) + aes(x="NumberGenotypes", y="NumberGenes", colour="Classification") + theme_bw() + geom_jitter() + geom_smooth(method="loess") + scale_y_log10() + labs(title=title_text_genes, x="Number of Genotypes", y="Number of Genes") + theme(figure_size=(20, 13))
fig2.save(outfigure_Genes_png, dpi=600, height=13, width=20, units = 'in')

plots=[fig1, fig2]
